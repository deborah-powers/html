============ Mes questions ============

Couleurs:
J'ai un cas où je n'ai ni background-color, ni color pour un élément. Est-il en erreur ?
Y-a-t-il une erreur quand background-color = transparent ?
Tîtres:
Y-a-t-il une erreur quand le tître ne contient pas de texte, mais une image sans texte ? Pour les tîtres h1, h2, etc.
Focus:
Dans ma page, j'ai des éléments object. Il sont sensés recevoir le focus (tabindex=0). Ma page utilise le focus natif du navigateur.
Mon navigateur ne les prend pas en charge. Les images et pdf sensés s'affichés n'apparaissent pas, le focus du navigateur les ignore.
Mon navigateur devrait-il les prendre en compte ?

============ Le css ============

C:/users/deborah.powers/desktop/formation%20rgaa%202024/formation/index.html#d96
Ma page doit être lisible, compréhensible, opérable et logique quand le css est supprimé. Les navigateurs d'écran sautent le pluspart du css, certains humains le modifient.
Le css seul est utilisé pour la mise en forme.
Utiliser les balises link, style ou l'attribut style='...'.
Les attributs width et height sont autorisés pour les images (au sens du rgaa). Size est autorisé pour les select. Sinon, pas de style inline tel que color='...'.
https://accessibilite.numerique.gouv.fr/methode/glossaire/#presentation-de-l-information (balises et attributs interdits), https://developer.mozilla.org/en-us/docs/web/html/element/u (cas de l'élément u)
Les informations apportées par le css doivent avoir une alternative dans le html.
	Marqueur de lien: Before --> emoticone, title, sr-only...
	Background-image --> vraie image. Faire des affiches en rajoutant du texte html par-dessus un conteneur avec image de fond. Prévoir une couleur de fond afin de conserver le contraste avec le texte.
L'ordre de succession des éléments css désactivé doit être logique. Grid est magique. Le bandeau des coockies doit être lu en début de page.
Tester en comparant la page classique avec sa version css désactivée. Vérifier que tous les éléments porteurs d'information sont présents, que les infos sont compréhensibles.
Vérifier s'il y a du texte hors écran.

************ Les couleurs ************

C:/users/deborah.powers/desktop/formation%20rgaa%202024/formation/index.html#d106
Si une couleur de fond est déclarée ou héritée, une couleur de texte doit être déclarée ou héritée aussi. Et vice-versa.
Vérifier à partir de la balise html si color et background-color sont déclarés. Sinon, descendre dans l'arborescence du document.
Modifier les couleurs par défaut de la page et vérifier quels éléments gardent leurs teintes originelles.
Quand background-color: Transparent ?
Si le fond est une image (background-image), mettre une couleur de fond par sécurité, afin de maintenir le contraste avec le texte si elle est désactivée. Tester en désactivant les images de fond.
Je n'ai pas trouvé comment faire dans edge et chrome. Celà semble impossible.

------------ Dans firefox ------------

About: Preferences / section des couleurs / bouton gérer les couleurs
Définir des couleurs
Décocher "utiliser les couleurs du système"
Menu "outrepasser les couleurs spécifiées" à jamais

************ Agrandissement du texte ************

Je dois pouvoir agrandir le texte de 200% sans perte d'information. 6 fois ctl+. Les éléments sont visibles et atteignables à la souris.
https://marieguillaumet.com/refonte-mon-portfolio-du-responsive-en-em-premiere-partie/
En css:
Zoom: 200%;
-moz-transform: Scale(2);
Attention au texte en image et aux sous-tîtres

************ Le focus ************

Le css conserve la visibilité du focus. Le mieux est de laisser la signalisation native.
Si je rajoute un cadre de focus, lui donner un constraste avec le fond de 3.3 minimum

------------ Forcer le focus pour les tests ------------

Sur firefox et chrome.
Console / inspecteur
Sélectionner mon élément
Onglet des règles /: Hov
Cocher les cases: Focus: Focus-visible et focus-within
https://stackoverflow.com/questions/1599660/which-html-elements-can-receive-focus

============ Les titres ============

Titre h1 vide, contenant une image ?

============ Les images ============

C:/users/deborah.powers/desktop/formation%20rgaa%202024/formation/index.html#d38 (source acces 42)
Balises considérées comme des images: Img, area, < input type='image'>, svg, object, embed, canvas.
Img et area possèdent un attribut alt, même vide.
Les autres doivent avoir un rôle. < x role='img'>. Img ou presentation.

************ L'image de décoration doit être ignorée par les techno d'assistance ************

Img et area: < img alt=""/> ou < img alt="divers" aria-hidden='true'/> ou < img alt="divers" role='presentation'/>
Les autres: < x aria-hidden='true'>
< conteneur aria-hidden='true'>toutes les images sont masquées</>
Les images liens sont traitées avant tout comme des liens.

************ L'image informative a un nom accessible ************

Attribut pouvant contenir l'alternative
	Alt="message alternatif"
	Title="message alternatif"
	Aria-label="message alternatif"
	Aria-labelledby="id-bloc-alternatif"
Cette alternative s'appele le nom accessible.
Si plusieurs attributs sont présents, les outils d'assistance en choisissent un selon une règle de surcharge.
Surcharge: Aria-labelledby > aria-label > alt > title
Aria-labelledby permet de contenir un long texte structuré. Cas où l'image contient une infographie.

************ L'image svg ************

< svg role='img' aria-label='message alternatif'>
Aria-label est remplaçable par aria-labelledby.

************ Le captcha ************

Pour les captcha et les images de tests.
L'alternative informe sur la fonction de captcha.
< img alt='code captcha à saisir'/>
Une méthode de captcha alternative est disponible. Captcha sonore, confirmation par sms, etc.

************ La description détaillée ************

Pour les infographies, les schémas, etc.
Un long discour vaut mieux qu'une image.
Il y a besoin d'une longue description structurée lisible sur la page. Faire un rapport.
Cette description peut être une div qui contient le texte.
Mettre à coté de l'image
	Un lien vers la page descriptive
	Un bouton dépliant la div
	Un texte toujours visible, s'il est court.
Eviter l'attribut longdesc.
Transformer une affiche en une div avec un fond. L'idéal est que l'utilisateur puisse adapter le style du texte. Ajouter une couleur de fond par sécurité, afin de conserver le contraste de lecture si l'image est désactivée.
https://accessconfig.a11y.fr/

************ La figure ************

< figure role='figure' aria-label='ma figure'>
Role group ou figure.
Aria-label ou title.
La légende contient les métadonnées de l'image ou complète les infos qu'elle donne.
La légende reprend le label.

============ Les iframes ============

C:/users/deborah.powers/desktop/formation%20rgaa%202024/formation/index.html#d63
Le titre est obligatoire.
Si le contenu à été crée par un tiers, il est exempté d'audit. Il doit néanmoins avoir une alternative accessible, selon le principe de non-interférence.

============ Les couleurs ============

C:/users/deborah.powers/desktop/formation%20rgaa%202024/formation/index.html#d67

************ La couleur de signalement ************

Pour l'onglet actif, etc.
Elle doit avoir une alternative. Pensez aux aveugles et aux différents types de daltonniens.
Doubler la couleur par un marquage et un attribut aria
Marquage par une icône, le passage du texte en gras, etc...
< a title='ma page - page active' class='is-active'...>
Texte en-dehors de l'écran. < span class='sr-only'>
Dans les captcha, proposer une méthode alternative.

------------ Propriétés aria ------------

Aria-pressed	pour les bouton toggle (on-off)	<button id='my-toggle-button' aria-pressed='false'>
Aria-selected	indique que l'option est selectionnée	option et les rôles gridcell, row, tab
Aria-current	indique l'élément où je suis	pleins de cas
Dans une barre de navigation	< a aria-current='page'...>	le lien mène à la page actuelle
Dans un gros formulaire, un parcours	<a class='step-indicator' aria-current='step'...>
Il accompagne un marquage visible par l'utilisateur. S'il n'y a pas de marquage, il n'est pas nécessaire non plus.
Exemple: https://accessibilite.public.lu/fr/raam1/methodologie.html

------------ Sr-only ------------

Un texte invisible pour l'utilisateur mais accessible au lecteur d'écran. < x class='sr-only'>
.sr-only {
	/* source: https://gist.github.com/ffoodd/000b59f431e3e64e4ce1a24d5bb36034 */
	Clip: Rect(1px, 1px, 1px, 1px)!important;
	-webkit-clip-path: Inset(50%)!important;
	Clip-path: Inset(50%)!important;
	Overflow: Hidden !important;
	Width: 1px !important;
	Height: 1px !important;
	Margin: -1px !important;
	White-space: Nowrap !important;
	Padding: 0 !important;
	Border: 0 !important;
	Position: Absolute !important;
}

************ Ratio de contraste selon la taille du texte ************

S'il y a une version alternative pour le rgaa, c'est elle que je dois auditer. Exemple sur https://www.communaute-paysbasque.fr/

------------ Le texte ------------

Le contraste va de 1: 1 (même couleur) à 21: 1 (noir et blanc).
Le logiciel cca analyse les couleurs du texte en image.
C:/program files/colour contrast analyser
Petit texte:
	Texte de moins de 24px
	Texte de moins de 18.5px en gras
Grand texte:
	Texte d'au moins 24px
	Texte d'au moins 18.5px en gras
.	aa		aaa:
Pt:	4.5: 1	7: 1
Gd:	3: 1		4.5: 1
Je prends en compte la taille calculée via windows.getcomputedstyle.

------------ Le contenu non textuel ------------

Contraste minimum de 3: 1 pour les éléments porteurs d'information autre que le texte. Ils sont comparés aux couleurs environnantes, pas que le fond.
Les images, les icônes, les couleurs de signalement, les étoiles de notation, les éléments interractifs (formulaires, etc).

------------ Les cas particuliers ------------

Le texte et l'image décoratifs, le logo et le nom de marque, l'élément de formulaire innactif (disabled).
L'extension wcag contrast checker analyse les couleurs des textes en html et css.
Tester le changement de style avec https://accessconfig.a11y.fr/
C:/users/deborah.powers/appdata/local/accessconfig-1

============ Structure du document html ============

C:/users/deborah.powers/desktop/formation%20rgaa%202024/formation/index.html#d82
Les critères 8.1 et 8.2 sont automatiquement mis à "conforme".
Titre de page pertinent. < title>. L'idéal est d'avoir un titre unique pour chaque page. Le cas échéant, mentionner la pagination et la catégorie. C'est le premier élément restitué par les lecteurs d'écran.

************ La langue du texte est précisée ************

Si un passage est dans une autre langue, il est dans une div contenant son propre attribut langue. Les mots isolés doivent être dans une span avec attribut lang, sauf s'ils figurent au dictionnaire de l'académie française.
https://www.dictionnaire-academie.fr/article/a9m2217 (dico académie)
https://fr.wikipedia.org/wiki/iso_639
https://learn.microsoft.com/fr-fr/partner-center/developer/partner-center-supported-languages-and-locales
Les mots étrangers peuvent être détectés à l'aide d'outils de correction de la grammaire, comme l'extension firefox grammalecte-fr.
Html: Lang	<!doctype html>< html lang='fr-fr'>
Xhtml: Xml: Lang
Xhtml en texte: Xml: Lang + lang

------------ Xhtml 1.0 servi en texte ------------

<!doctype html public '-//w3c//dtd xhtml 1.0 strict//en' 'http://www.w3.org/tr/xhtml1/dtd/xhtml1-strict.dtd'>
< html xmlns='http://www.w3.org/1999/xhtml' xml: Lang='fr' lang='fr'>
< meta http-equiv='content-type' content='text/html; charset=utf-8' />

------------ Xhtml 1.0 servi en application ou 1.1 ------------

<?xml version="1.0" encoding="utf-8"?>
<!doctype html public "-//w3c//dtd xhtml 1.1//en" "http://www.w3.org/tr/xhtml11/dtd/xhtml11.dtd">
< html xmlns="http://www.w3.org/1999/xhtml" xml: Lang="fr">
< head>< meta http-equiv="content-type" content="application/xhtml+xml; charset=utf-8" />

************ Le sens de lecture est précisé ************

< html dir='rtl'>
< div dir='ltr'>
Ltr: Left to right
Rtl: Right to left
Obligatoire si:
	Le sens de lecture de la langue est ltr, comme pour les langues arabes.
	Un encart rtl est au milieu d'un texte ltr.
Sur l'élément html, dir='ltr' peut être ommi.

============ La sémantique de balisage ============

Eviter les balises vides, notament les paragraphes.
Utiliser une balise pour son rôle prévu. Les titres ne servent pas au référencement, les conteneurs (div, section, etc) doivent avoir des noeuds enfants.
Si deux main dans la page, l'un doit avoir un attribut hidden.
Les header et footer ne doivent pas contenir de header et footer.
Article représente une section autonome de son parent. Il doit avoir un titre. https://developer.mozilla.org/fr/docs/web/html/element/article
Section représente une partie de son parent. Elle est sensée avoir un titre.
Aside représente un bloc indépendant du contenu de son parent.

============ Divers ============

Le nom accessible est celui restitué par les technologies d'assistance.
Le principe de non-interférence: S'il y a des contenus non-conformes, ils laissent les utilisateurs accéder au reste de la page et à toute l'information. Un élement non-conforme doit souvent avoir une alternative accessible.
https://developer.mozilla.org/en-us/docs/web/html/element/area

================================================

Sujet:	Programmation, formation
Auteur:	Access42 et Deborah
Lien:	https://formations.access42.net/formations/formation-audit-accessibilite/
Laut:	https://formations.access42.net/